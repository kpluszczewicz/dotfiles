shell = { program = "/bin/zsh", args = ["-l"] }

# Themes pack (https://github.com/alacritty/alacritty-theme)
#    To setup a theme, put line below with {theme} replaced by your pick
#    from ~/.config/alacritty/themes/themes`
#    import = [ "~/.config/alacritty/themes/themes/{theme}.toml" ]
import = [ "~/.config/alacritty/themes/themes/catppuccin_frappe.toml" ]

[env]
LC_ALL = "pl_PL.UTF-8"
# Does not work as expected
option_as_alt = "Both"

[window]
decorations = "Full"
opacity = 0.98
padding = { x = 5, y = 0 }


[colors]
transparent_background_colors = true

# [colors.primary]
# background = '#232e39'

[font]
# NOTE: It's important to load fonts using command below
# fc-list : family | sort -f | grep Nerd
# Out put can be interpreted as <Font Name>,<Abbreviation of Font name> 
# Should use <Abbreviatioin of Font name> below
normal = { family = "JetBrainsMonoNL NFM Light" }
size = 16
offset = { x = 0, y = 5 }
glyph_offset = { x = 0, y = 0 }

[cursor]
style = { blinking = "On" }

[selection]
save_to_clipboard = true

[keyboard]
bindings = [
  { key = "0", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t", "0"]} },
  { key = "1", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t", "1"]} },
  { key = "2", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t", "2"]} },
  { key = "3", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 3"]} },
  { key = "4", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 4"]} },
  { key = "5", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 5"]} },
  { key = "6", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 6"]} },
  { key = "7", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 7"]} },
  { key = "8", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 8"]} },
  { key = "9", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-t 9"]} },
  # in order to map Command|Shift-] to go to next tab you need to use Shift-] '}' as a key, and also add Shift to mods
  { key = "}", mods = "Command | Shift", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-n"]} },
  # in order to map Command|Shift-[ to go to next tab you need to use Shift-[ '}' as a key, and also add Shift to mods
  { key = "{", mods = "Command | Shift", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-window", "-p"]} },
  # To prevent from defult macOs action 'hide'
  { key = "h", mods = "Command", action="ReceiveChar" },
  # { key = "h", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-pane", "-L"]} },
  { key = "j", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["select-pane", "-h"]} },
  { key = "l", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["split-window", "-R"]} },
  # { key = "0", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "0"]} },
  # { key = "1", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "1"]} },
  # { key = "2", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "2"]} },
  # { key = "3", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "3"]} },
  # { key = "4", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "4"]} },
  # { key = "5", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "5"]} },
  # { key = "6", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "6"]} },
  # { key = "7", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "7"]} },
  # { key = "8", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "8"]} },
  # { key = "9", mods = "Command", command = { program = "/opt/homebrew/bin/zellij", args =  ["action", "go-to-tab", "9"]} },
  { key = "t", mods = "Command", command = { program = "/opt/homebrew/bin/tmux", args =  ["new-window"]} },
  { key = "f", mods = "Command|Option", action = "ToggleSimpleFullscreen"},
  { key = "d", mods = "Command", action = "ScrollHalfPageDown"},
  { key = "u", mods = "Command", action = "ScrollHalfPageUp"},
  { key = "Slash", mods = "Control", chars = "\u001f" }, # fix <C-/> problem
  { key = "Space", mods = "Shift", chars = "Ō" },
  # hack for alacritty to make vim handle <S-Enter> keybinding
  { key = "Return", mods = "Shift", chars = "‚" },
  { key = ";", mods = "Control", chars = "…" }, # it's Option-;
  { key = ".", mods = "Option", chars = "\u001b\u002e"}, # Option-. like Alt-.
  { key = "b", mods = "Option", chars = "\u001bb"}, # For Alt-b navigation
  { key = "f", mods = "Option", chars = "\u001bf"}, # For Alt-f navigation
  { key = "q", mods = "Option", chars = "\u001bq"}, # For Alt-f navigation
  # { key = "p", mods = "Option", chars = "\u001bp"}, # For Alt-f navigation
  # { key = "n", mods = "Option", chars = "\u001bn"}, # For Alt-f navigation
]
